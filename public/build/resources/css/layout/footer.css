@keyframes opLv {
	0%, 100% {
		opacity: 1;
	}
	20% {
		opacity: 0.8;
	}
	50% {
		opacity: 0.6;
	}
	80% {
		opacity: 0.8;
	}
}
@keyframes blink {
	0%, 100% {
		opacity: 1;
	}
	50% {
		opacity: 0;
	}
}
#footer {
	border-top: none;
	text-align: center;
}
#footer .profileWrap {
	width: 100%;
	height: 100%;
	display: flex;
	flex-flow: row wrap;
	justify-content: center;
	align-items: center;
}
#footer .profileWrap .profileL {
	display: flex;
	flex-flow: row wrap;
}
#footer .profileWrap .profileL .profilePhoto img {
	border-radius: 50%;
	width: 176px;
	height: 236px;
}
#footer .profileWrap .profileL .profileContact {
	padding: 50px 25px;
	display: flex;
	flex-flow: column wrap;
	justify-content: space-around;
	align-items: flex-start;
}
#footer .profileWrap .profileL .profileContact p {
	font-size: 16px;
	color: #caa623;
	padding: 5px 5px;
}
#footer .profileWrap .profileL .profileContact p:last-child a {
	vertical-align: text-bottom;
	font-size: 24px;
}
#footer .profileWrap .profileR {
	display: flex;
	flex-flow: row wrap;
	justify-content: center;
	align-items: center;
}
#footer .profileWrap .profileR .skills p {
	padding-bottom: 20px;
}
#footer .profileWrap .profileR .skills p span {
	font-size: 16px;
	color: var(--fontC);
	font-weight: bold;
}
#footer .profileWrap .profileR .skills .sphereChartWrap {
	display: flex;
	flex-flow: row wrap;
	justify-content: center;
	align-items: center;
	column-gap: 10px;
}
#footer .profileWrap .profileR .skills .sphereChartWrap .sphere {
	position: relative;
	display: inline-block;
	width: 100px;
	height: 100px;
	border-radius: 50%;
	transition: 0.3s;
}
#footer .profileWrap .profileR .skills .sphereChartWrap .sphere .skillTitle {
	width: 100%;
	height: 100%;
	display: inline-block;
}
#footer .profileWrap .profileR .skills .sphereChartWrap .sphere .skillTitle strong {
	font-size: 12px;
	color: #caa623;
	vertical-align: top;
	font-weight: bold;
}
#footer .profileWrap .profileR .skills .sphereChartWrap .sphere .center {
	font-size: 16px;
	background-color: #1c1b18;
	display: block;
	position: absolute;
	top: 50%;
	left: 50%;
	width: 65px;
	height: 65px;
	line-height: 65px;
	border-radius: 50%;
	text-align: center;
	transform: translate(-50%, -50%);
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
