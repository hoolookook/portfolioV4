@keyframes opLv {
	0%, 100% {
		opacity: 1;
	}
	20% {
		opacity: 0.8;
	}
	50% {
		opacity: 0.6;
	}
	80% {
		opacity: 0.8;
	}
}
@keyframes blink {
	0%, 100% {
		opacity: 1;
	}
	50% {
		opacity: 0;
	}
}
#fixedWrap {
	z-index: 6;
}
#fixedWrap .iconBtn {
	background: url(/public/src/resources/images/screenShot/upArrow.png) no-repeat center center;
	background-size: 30px 30px;
	width: 30px;
	height: 30px;
	position: fixed;
	border: none;
	cursor: pointer;
}
#fixedWrap #upicon {
	right: 15px;
	transform: rotateX(0deg);
	bottom: 55px;
}
#fixedWrap #downicon {
	right: 15px;
	bottom: 20px;
	transform: rotateX(180deg);
}
#fixedWrap .fixed {
	position: fixed;
}
#fixedWrap .Top {
	width: 100%;
	top: 0;
	left: 0;
	border-top: 3px dashed #caa623;
}
#fixedWrap .Bottom {
	width: 100%;
	bottom: 0;
	left: 0;
	border-top: 3px dashed #caa623;
}
#fixedWrap .Left {
	height: 100vh;
	min-height: -webkit-fill-available;
	top: 0;
	left: 0;
	border-left: 3px dashed #caa623;
}
#fixedWrap .Right {
	height: 100vh;
	min-height: -webkit-fill-available;
	top: 0;
	right: 0;
	border-right: 3px dashed #caa623;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UvY29tbW9uLnNjc3MiLCJsYXlvdXQvZml4ZWQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvSEE7Q0FDRTtFQUVFOztDQUVGO0VBQ0U7O0NBRUY7RUFDRTs7Q0FFRjtFQUNFOzs7QUFHSjtDQUNFO0VBRUU7O0NBRUY7RUFDRTs7O0FDeElKO0NBQ0U7O0FBQ0E7Q0FDRTtDQUVBO0NBQ0E7Q0FDQTtDQUNBO0NBQ0E7Q0FDQTs7QUFFRjtDQUNFO0NBQ0E7Q0FDQTs7QUFFRjtDQUNFO0NBQ0E7Q0FDQTs7QUFFRjtDQUNFOztBQUVGO0NBQ0U7Q0FDQTtDQUNBO0NBQ0EsWURSSzs7QUNVUDtDQUNFO0NBQ0E7Q0FDQTtDQUNBLFlEZEs7O0FDZ0JQO0NBQ0U7Q0FDQTtDQUNBO0NBQ0E7Q0FDQSxhRHJCSzs7QUN1QlA7Q0FDRTtDQUNBO0NBQ0E7Q0FDQTtDQUNBLGNENUJLIiwiZmlsZSI6ImxheW91dC9maXhlZC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA6cm9vdCB7XHJcbi8vICAgLy8gY29sb3JcclxuLy8gICAtLUdyZWVuMTogIzUxOTQ2MjtcclxuLy8gICAtLUdyZWVuMjogIzQ1N2Q1MztcclxuLy8gICAtLUdyZWVuMzogIzM2NjE0MTtcclxuLy8gICAtLUdyZWVuNDogIzBiNTkzZDtcclxuLy8gICAtLUdyZWVuNTogIzE3NGMzOTtcclxuLy8gICAtLWJsYWNrMTogIzFjMWIxODtcclxuLy8gICAtLWJsYWNrMjogIzI0MjIxZjtcclxuLy8gICAtLWJsYWNrMzogIzMwMmUyYTtcclxuLy8gICAtLWZvbnRDOiAjY2FhNjIzO1xyXG4vLyB9XHJcbiRmb250QzogI2NhYTYyMztcclxuJEdyZWVuMTogIzUxOTQ2MjtcclxuJEdyZWVuMjogIzQ1N2Q1MztcclxuJEdyZWVuMzogIzM2NjE0MTtcclxuJEdyZWVuNDogIzBiNTkzZDtcclxuJEdyZWVuNTogIzE3NGMzOTtcclxuJGJsYWNrMTogIzFjMWIxODtcclxuJGJsYWNrMjogIzI0MjIxZjtcclxuJGJsYWNrMzogIzMwMmUyYTtcclxuJG1pbldpZHRoOiAyODBweDtcclxuJGJvcmRlcjogM3B4IGRhc2hlZCAkZm9udEM7XHJcblxyXG5AbWl4aW4gY29tbW9uV3JhcCgkd2lkdGgsICRoZWlnaHQpIHtcclxuICB3aWR0aDogJHdpZHRoO1xyXG4gIGhlaWdodDogJGhlaWdodDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgZm9udC1mYW1pbHk6IFwiRG8gSHllb25cIiwgc2Fucy1zZXJpZjtcclxuICBjb2xvcjogdmFyKC0tZm9udEMpO1xyXG59XHJcbkBtaXhpbiBjb21tb25Gb250KCRmb250U2l6ZSwgJGZvbnRDb2xvcikge1xyXG4gIGZvbnQtc2l6ZTogJGZvbnRTaXplO1xyXG4gIGNvbG9yOiAkZm9udENvbG9yO1xyXG59XHJcbkBtaXhpbiBjb21tb25GbGV4KCRmbGV4RiwgJGp1c3RpZnlDLCAkYWxpZ25JKSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWZsb3c6ICRmbGV4RjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6ICRqdXN0aWZ5QztcclxuICBhbGlnbi1pdGVtczogJGFsaWduSTtcclxufVxyXG5AbWl4aW4gYm9yZGVyQkcoJGJhY2tncm91bmRDb2xvciwgJGJvcmRlckNvbG9yKSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRDb2xvcjtcclxuICBib3JkZXI6IDNweCBkYXNoZWQgJGJvcmRlckNvbG9yO1xyXG59XHJcbkBtaXhpbiBXSCgkd2lkdGgsICRoZWlnaHQpIHtcclxuICB3aWR0aDogJHdpZHRoO1xyXG4gIGhlaWdodDogJGhlaWdodDtcclxufVxyXG5cclxuQG1peGluIGZvb3RSYXRpbyhcclxuICAkZGl2aXNpb24sXHJcbiAgJHRleHREaXZpc2lvbixcclxuICAkQ2hhcnREaXZpc2lvbixcclxuICAkc21hbGxfZm9udFNpemUsXHJcbiAgJGJpZ19mb250U2l6ZVxyXG4pIHtcclxuICAjZm9vdGVyIHtcclxuICAgIC5wcm9maWxlV3JhcCB7XHJcbiAgICAgIC5wcm9maWxlTCB7XHJcbiAgICAgICAgLnByb2ZpbGVQaG90byB7XHJcbiAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBXSChcclxuICAgICAgICAgICAgICBjYWxjKCRwcm9maWxlUGljVy8kZGl2aXNpb24pLFxyXG4gICAgICAgICAgICAgIGNhbGMoJHByb2ZpbGVQaWNILyRkaXZpc2lvbilcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLnByb2ZpbGVDb250YWN0IHtcclxuICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGNhbGMoJHNtYWxsX2ZvbnRTaXplLyR0ZXh0RGl2aXNpb24pO1xyXG4gICAgICAgICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiBjYWxjKCRiaWdfZm9udFNpemUvJHRleHREaXZpc2lvbik7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIC5wcm9maWxlUiB7XHJcbiAgICAgICAgLnNraWxscyB7XHJcbiAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgc3BhbiB7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiBjYWxjKCRiaWdfZm9udFNpemUvJHRleHREaXZpc2lvbik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5zcGhlcmVDaGFydFdyYXAge1xyXG4gICAgICAgICAgICAuc3BoZXJlIHtcclxuICAgICAgICAgICAgICBAaW5jbHVkZSBXSChcclxuICAgICAgICAgICAgICAgIGNhbGMoJHNwaGVyZVdILyRDaGFydERpdmlzaW9uKSxcclxuICAgICAgICAgICAgICAgIGNhbGMoJHNwaGVyZVdILyRDaGFydERpdmlzaW9uKVxyXG4gICAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgICAgIC5za2lsbFRpdGxlIHtcclxuICAgICAgICAgICAgICAgIHN0cm9uZyB7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogY2FsYygkc21hbGxfZm9udFNpemUvJHRleHREaXZpc2lvbik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIC5jZW50ZXIge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgV0goXHJcbiAgICAgICAgICAgICAgICAgIGNhbGMoJGNlbnRlcldITC8kQ2hhcnREaXZpc2lvbiksXHJcbiAgICAgICAgICAgICAgICAgIGNhbGMoJGNlbnRlcldITC8kQ2hhcnREaXZpc2lvbilcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IGNhbGMoJGJpZ19mb250U2l6ZS8kdGV4dERpdmlzaW9uKTtcclxuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiBjYWxjKCRjZW50ZXJXSEwvJENoYXJ0RGl2aXNpb24pO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4vLyBhbmltYXRpb24ga2V5ZnJhbWVzXHJcbkBrZXlmcmFtZXMgb3BMdiB7XHJcbiAgMCUsXHJcbiAgMTAwJSB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gIH1cclxuICAyMCUge1xyXG4gICAgb3BhY2l0eTogMC44O1xyXG4gIH1cclxuICA1MCUge1xyXG4gICAgb3BhY2l0eTogMC42O1xyXG4gIH1cclxuICA4MCUge1xyXG4gICAgb3BhY2l0eTogMC44O1xyXG4gIH1cclxufVxyXG5Aa2V5ZnJhbWVzIGJsaW5rIHtcclxuICAwJSxcclxuICAxMDAlIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgfVxyXG4gIDUwJSB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gIH1cclxufVxyXG4iLCJAaW1wb3J0IFwiLi4vYmFzZS9jb21tb24uc2Nzc1wiO1xyXG4jZml4ZWRXcmFwIHtcclxuICB6LWluZGV4OiA2O1xyXG4gIC5pY29uQnRuIHtcclxuICAgIGJhY2tncm91bmQ6IHVybCgvcHVibGljL3NyYy9yZXNvdXJjZXMvaW1hZ2VzL3NjcmVlblNob3QvdXBBcnJvdy5wbmcpXHJcbiAgICAgIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiAzMHB4IDMwcHg7XHJcbiAgICB3aWR0aDogMzBweDtcclxuICAgIGhlaWdodDogMzBweDtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgI3VwaWNvbiB7XHJcbiAgICByaWdodDogMTVweDtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlWCgwZGVnKTtcclxuICAgIGJvdHRvbTogNTVweDtcclxuICB9XHJcbiAgI2Rvd25pY29uIHtcclxuICAgIHJpZ2h0OiAxNXB4O1xyXG4gICAgYm90dG9tOiAyMHB4O1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGVYKDE4MGRlZyk7XHJcbiAgfVxyXG4gIC5maXhlZCB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgfVxyXG4gIC5Ub3Age1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYm9yZGVyLXRvcDogJGJvcmRlcjtcclxuICB9XHJcbiAgLkJvdHRvbSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBib3JkZXItdG9wOiAkYm9yZGVyO1xyXG4gIH1cclxuICAuTGVmdCB7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgbWluLWhlaWdodDogLXdlYmtpdC1maWxsLWF2YWlsYWJsZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBib3JkZXItbGVmdDogJGJvcmRlcjtcclxuICB9XHJcbiAgLlJpZ2h0IHtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBtaW4taGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3JkZXItcmlnaHQ6ICRib3JkZXI7XHJcbiAgfVxyXG59XHJcbiJdfQ== */
